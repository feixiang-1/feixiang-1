# url 里填写自己的订阅,名称不能重复
proxy-providers:
  private_nodes:
    url: "https://your-subscription-url/"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300

# 用于下载订阅时指定UA
global-ua: clash

# 全局配置
mixed-port: 7890
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true

geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 48
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://ghfast.top/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: ui
external-ui-url: "https://ghfast.top/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

global-client-fingerprint: random
keep-alive-idle: 600
keep-alive-interval: 30

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true

# 流量嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "dlg.io.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"

# 代理模式
tun:
  enable: false
  stack: mixed
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
    - "+.market.xiaomi.com"
  fallback:
    - https://dns.cloudflare.com/dns-query
    - tls://dns.google:853
    - https://1.1.1.1/dns-query
  default-nameserver:
    - 223.5.5.5
    - 114.114.114.114
  nameserver:
    - 8.8.8.8
    - 1.1.1.1
    - 208.67.222.222
    - 208.67.220.220
  proxy-server-nameserver:
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  nameserver-policy:
    "geosite:cn,private,apple":
      - 218.104.111.114
      - 218.106.127.114
      - https://120.53.53.53/dns-query
      - https://223.5.5.5/dns-query
    "geosite:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"

proxies:
  - name: "🟢 直连"
    type: direct
    udp: true

# 锚点
pr: &pr { type: select, proxies: [♻️ 自动选择, ♻️ SG自动, ♻️ TW自动, ♻️ JP自动, ♻️ KR自动, ♻️ SA自动, ♻️ US自动, ♻️ EU自动, ♻️ CA自动] }
pr1: &pr1 { type: url-test, proxies: [♻️ SG自动, ♻️ TW自动, ♻️ JP自动, ♻️ KR自动, ♻️ SA自动, ♻️ US自动, ♻️ EU自动, ♻️ CA自动] }

# 策略组
proxy-groups:
  - { name: 🚀 节点选择, type: select, proxies: [♻️ 自动选择, ♻️ SG自动, ♻️ TW自动, ♻️ JP自动, ♻️ KR自动, ♻️ SA自动, ♻️ HK自动, ♻️ US自动, ♻️ EU自动, ♻️ CA自动, 🌐 全部节点, 🟢 直连] }
  - { name: 📹 YouTube, !!merge <<: *pr }
  - { name: 🍀 Google, !!merge <<: *pr }
  - { name: 🤖 ChatGPT, !!merge <<: *pr1 }
  - { name: 😄 自定义规则, !!merge <<: *pr1 }
  - { name: 👨🏿‍💻 GitHub, !!merge <<: *pr }
  - { name: 🐬 OneDrive, !!merge <<: *pr }
  - { name: 🪟 Microsoft, !!merge <<: *pr }
  - { name: 🎵 TikTok, !!merge <<: *pr }
  - { name: 📲 Telegram, !!merge <<: *pr }
  - { name: 🎥 NETFLIX, !!merge <<: *pr }
  - { name: ✈️ Speedtest, !!merge <<: *pr }
  - { name: 💶 PayPal, !!merge <<: *pr }
  - { name: 🍎 Apple, type: select, proxies: [🟢 直连, 🚀 节点选择] }
  - { name: 🎯 全球直连, type: select, proxies: [🟢 直连, 🚀 节点选择] }
  - { name: 🐟 漏网之鱼, !!merge <<: *pr }
  - { name: ♻️ SA自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)东南亚|SEA|马来西亚|Malaysia|MY|泰国|Thailand|TH|印尼|Indonesia|ID|菲律宾|Philippines|PH|越南|Vietnam|VN|柬埔寨|Cambodia|KH|缅甸|Myanmar|MM|老挝|Laos|LA|文莱|Brunei|BN)" }
  - { name: ♻️ EU自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)欧洲|EU|United Kingdom|UK|英国|France|FR|法国|Germany|DE|德国|Netherlands|NL|荷兰|Italy|IT|意大利|Spain|ES|西班牙|Sweden|SE|瑞典|Denmark|DK|丹麦|Finland|FI|芬兰|Norway|NO|挪威|Switzerland|CH|瑞士|Austria|AT|奥地利|Belgium|BE|比利时|Poland|PL|波兰|Ireland|IE|爱尔兰)" }
  - { name: ♻️ CA自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)加拿大|CA|Canada|温哥华|多伦多|蒙特利尔|卡尔加里|渥太华|温尼伯|埃德蒙顿|维多利亚)" }
  - { name: ♻️ HK自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)香港|港|HK|Hong Kong|HongKong)" }
  - { name: ♻️ SG自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)新加坡|坡|狮城|SG|Singapore)" }
  - { name: ♻️ JP自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)日本|JP|Japan|东京|大阪|北海道|名古屋|福冈|京都|广岛|神户|冲绳|横滨|埼玉|川日|泉日|沪日|深日|[^-]日)" }
  - { name: ♻️ US自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)美国|US|United States|洛杉矶|旧金山|圣何塞|硅谷|圣克拉拉|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|拉斯维加斯|西雅图|芝加哥|纽约|迈阿密|华盛顿|波士顿|休斯顿|底特律|费城)" }
  - { name: ♻️ TW自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)台湾|台|TW|Taiwan|台北|新北|高雄|台中|台南|彰化|南投|桃园)" }
  - { name: ♻️ KR自动, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "((?i)韩国|韩|韓|KR|Korea|KOR|首尔|釜山|仁川|大邱|光州|水原)" }
  - { name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$" }
  - { name: 🌐 全部节点, type: select, include-all: true }
rules:
  - RULE-SET,private_ip,🟢 直连,no-resolve
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,ProxyGFWlist,😄 自定义规则
  - RULE-SET,proxylite,🚀 节点选择
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,geolocation-!cn,🚀 节点选择
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 全球直连,no-resolve
  - MATCH,🐟 漏网之鱼
rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  qcy: &qcy { type: http, interval: 86400, behavior: domain, format: text }
  class: &class { type: http, interval: 86400, behavior: classical, format: text }
rule-providers:


  private_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs" }
  
  proxylite: { !!merge <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/ProxyLite.list" }
  ai: { !!merge <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/qichiyuhub/rule/refs/heads/master/AI.list" }
  ProxyGFWlist: { !!merge <<: *class, url: "https://ghfast.top/https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ProxyGFWlist.list" }

  youtube_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs" }
  google_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs" }
  github_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs" }
  telegram_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs" }
  netflix_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs" }
  paypal_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs" }
  onedrive_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs" }
  microsoft_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs" }
  apple_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs" }
  speedtest_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs" }
  tiktok_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs" }
  gfw_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs" }
  geolocation-!cn: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs" }
  cn_domain: { !!merge <<: *domain, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs" }

  cn_ip: { !!merge <<: *ip, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs" }
  google_ip: { !!merge <<: *ip, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs" }
  telegram_ip: { !!merge <<: *ip, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs" }
  netflix_ip: { !!merge <<: *ip, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs" }
  private_ip: { !!merge <<: *ip, url: "https://ghfast.top/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs" }
